PublicKey:
  get:
    summary: 공개키 조회
    description: 설명추가
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-center/documents/-/blob/master/functions.md#fc-cm-01001
    tags:
      - "Cluster Management"
    responses:
      200:
        $ref: '#/components/responses/PublicKey'
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

Check:
  post:
    summary: 클러스터 연결 확인
    description: 설명추가
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-center/documents/-/blob/master/functions.md#fc-cm-01031
    tags:
      - "Cluster Management"
    requestBody:
      $ref: '#/components/requestBodies/ClusterConnectionInfo'
    responses:
      200:
        $ref: '#/components/responses/Message'
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

CheckStatus:
  get:
    summary: 클러스터 상태 확인
    description: 설명추가
    tags:
      - "Cluster Management"
    parameters:
      - $ref: '#/components/parameters/ClusterID'
    responses:
      200:
        $ref: '#/components/responses/CheckClusterInfo'
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

Config:
  get:
    summary: Config 조회
    description: 설명추가
    tags:
      - "Cluster Management"
    parameters:
      - $ref: '#/components/parameters/ClusterID'
    responses:
      200:
        $ref: '#/components/responses/ConfigInfo'
      204:
        description: No Contents
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

  patch:
    summary: Config 수정
    description: 설명추가
    tags:
      - "Cluster Management"
    parameters:
      - $ref: '#/components/parameters/ClusterID'
    requestBody:
      $ref: '#/components/requestBodies/ConfigInfo'
    responses:
      201:
        $ref: '#/components/responses/Message'
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      409:
        description: Conflict
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

Resource:
  get:
    summary: 클러스터 목록 조회
    description: 설명추가
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-center/documents/-/blob/master/functions.md#fc-cm-01011
    tags:
      - "Cluster Management"
    parameters:
      - $ref: 'parameter.yaml#/Pagination/Limit'
      - $ref: 'parameter.yaml#/Pagination/Offset'
      - $ref: '#/components/parameters/TypeCode'
      - $ref: '#/components/parameters/Name'
      - $ref: '#/components/parameters/OwnerGroup'
      - $ref: 'parameter.yaml#/Sync'
    responses:
      200:
        $ref: '#/components/responses/Clusters'
      204:
        description: No Contents
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

  post:
    summary: 클러스터 등록
    description: 설명추가
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-center/documents/-/blob/master/functions.md#fc-cm-01041
    tags:
      - "Cluster Management"
    requestBody:
      $ref: '#/components/requestBodies/Cluster'
    responses:
      201:
        $ref: '#/components/responses/Cluster'
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      409:
        description: Conflict
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

Object:
  get:
    summary: 클러스터 조회
    description: 설명추가
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-center/documents/-/blob/master/functions.md#fc-cm-01021
    tags:
      - "Cluster Management"
    parameters:
      - $ref: '#/components/parameters/ClusterID'
      - $ref: 'parameter.yaml#/Sync'
    responses:
      200:
        $ref: '#/components/responses/Cluster'
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

  patch:
    summary: 클러스터 수정
    description: 설명추가
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-center/documents/-/blob/master/functions.md#fc-cm-01051
    tags:
      - "Cluster Management"
    parameters:
      - $ref: '#/components/parameters/ClusterID'
    requestBody:
      $ref: '#/components/requestBodies/Cluster'
    responses:
      200:
        $ref: '#/components/responses/Cluster'
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      404:
        description: Not Found
      409:
        description: Conflict
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

  delete:
    summary: 클러스터 제거
    description: 설명추가
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-center/documents/-/blob/master/functions.md#fc-cm-01061
    tags:
      - "Cluster Management"
    parameters:
      - $ref: '#/components/parameters/ClusterID'
    responses:
      200:
        $ref: '#/components/responses/Message'
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

Sync:
  post:
    summary: 클러스터 동기화
    description: 설명추가
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-center/documents/-/blob/master/functions.md#fc-cm-01081
    tags:
      - "Cluster Management"
    responses:
      200:
        $ref: '#/components/responses/Message'
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

SyncStatus:
  get:
    summary: 클러스터 동기화 상태 조회
    description: 클러스터의 동기화 상태를 조회한다.
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-center/documents/-/blob/1-0-stable/functions.md#fc-cm-01082
    tags:
      - "Cluster Management"
    responses:
      200:
        $ref: '#/components/responses/SyncClusterStatus'
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

SyncException:
  post:
    summary: 클러스터 상태 예외 서비스
    description: 설명추가
    tags:
      - "Cluster Management"
    parameters:
      - $ref: '#/components/parameters/ClusterID'
    requestBody:
      $ref: '#/components/requestBodies/SyncExceptionInfo'
    responses:
      200:
        $ref: '#/components/responses/Message'
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

Credential:
  patch:
    summary: 인증 정보 수정
    description: 클러스터에 연결하기위한 인증 정보 수정
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-center/documents/-/blob/master/functions.md#fc-cm-01091
    tags:
      - "Cluster Management"
    parameters:
      - $ref: '#/components/parameters/ClusterID'
    requestBody:
      $ref: '#/components/requestBodies/Credential'
    responses:
      200:
        $ref: '#/components/responses/Message'
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

components:
  parameters:
    ClusterID:
      in: path
      name: cluster_id
      description: 클러스터 ID
      required: true
      schema:
        type: integer
        format: uint64

    MessageInterval:
      in: query
      name: message_interval
      description: health check 조회 주기. 1~10 까지 가능
      schema:
        type: integer
        format: int64

    TypeCode:
      in: query
      name: type_code
      description: 클러스터 종류
      schema:
        type: string
        enum:
          - "cluster.type.openstack"
          - "cluster.type.openshift"
          - "cluster.type.kubernetes"
          - "cluster.type.vmware"

    Name:
      in: query
      name: name
      description: 클러스터 이름
      schema:
        type: string

    OwnerGroup:
      in: query
      name: owner_group_id
      description: Owner 그룹 ID
      schema:
        type: integer
        format: uint64

  requestBodies:
    Cluster:
      content:
        application/json:
          schema:
            description: 클러스터
            type: object
            properties:
              cluster:
                $ref: 'schema.yaml#/Cluster'
          examples:
            creation:
              value: {
                cluster: {
                  owner_group: { id: 1 },
                  name: "대전센터 OpenStack #001",
                  state_code: "cluster.state.active",
                  type_code: "cluster.type.openstack",
                  api_server_url: "https://192.168.1.64:8080",
                  credential: "B0DBdP98t8/V6hxtfPa+6w==",
                  remarks: "대전센터 OpenStack #001"
                }
              }
            modification:
              value: {
                cluster: {
                  id: 1,
                  owner_group: { id: 1 },
                  name: "대전센터 OpenStack #001",
                  state_code: "cluster.state.active",
                  type_code: "cluster.type.openstack",
                  api_server_url: "https://192.168.1.64:8080",
                  remarks: "대전센터 OpenStack #001"
                }
              }

    ConfigInfo:
      description: 클러스터의 Config
      content:
        application/json:
          schema:
            type: object
            properties:
              config:
                $ref: 'schema.yaml#/ClusterConfig'
          example: {
            config: {
              timestamp_interval: 5,
              reserved_sync_interval: 1,
            }
          }

    ClusterConnectionInfo:
      content:
        application/json:
          schema:
            description: 클러스터 접속정보
            type: object
            properties:
              type_code:
                description: 클러스터의 종류
                type: string
                enum:
                  - "cluster.type.openstack"
                  - "cluster.type.openshift"
                  - "cluster.type.kubernetes"
                  - "cluster.type.vmware"
              api_server_url:
                description: 클러스터의 API Server URL
                type: string
              credential:
                description: 클러스터의 API Credential
                type: string
          examples:
            password:
              value: {
                type_code: "cluster.type.openstack",
                api_server_url: "https://192.168.1.64:8080",
                credential: "B0DBdP98t8/V6hxtfPa+6w=="
              }

    Credential:
      content:
        application/json:
          schema:
            description: 클러스터 인증 정보
            type: object
            properties:
              old_credential:
                description: 기존 인증 정보
                type: string
              new_credential:
                description: 새 인증 정보
                type: string
          example: {
            old_credential: "B0DBdP98t8/V6hxtfPa+6w==",
            new_credential: "/MsANnBrwMUc/T1ubNMCOA=="
          }

    SyncExceptionInfo:
      content:
        application/json:
          schema:
            description: 클러스터 상태 결과 예외 대상
            type: object
            properties:
              storages:
                $ref: 'schema.yaml#/Storage'
              computes:
                $ref: 'schema.yaml#/Compute'
              networks:
                $ref: 'schema.yaml#/Network'
          example: {
            computes: [
              { binary: "cinder-volume", host: "qa-cloud-2-pack-control-1.datacommand.kr@lvm", exception: true },
            ],
            storages: [
              { binary: "cinder-volume", host: "qa-cloud-2-pack-control-1.datacommand.kr@lvm", exception: true },
            ],
            networks: [
              { type: "OVN Controller agent", binary: "ovn-controller", host: "qa-cloud-2-pack-compute-1.datacommand.kr", exception: false },
            ],
          }



  responses:
    PublicKey:
      description: 공개키를 반환한다.
      content:
        application/json:
          schema:
            type: object
            properties:
              key:
                type: string
              message:
                $ref: 'schema.yaml#/Message'
          example: {
            key: "-----BEGIN PUBLIC KEY-----\n
                  MIICIDANBgkqhkiG9w0BAQEFAAOCAg0AMIICCAKCAgEAtHe8duOUSt3Hc3LkzZK+\n
                  a6ZZfuzzki7slhYeNwrDPyXZNKK5DBOPRsug31YLf6UcS3VAvBqN44zJCWfkk3b0\n
                  0GYyqkcUqxZgmjjyiblSn6s8fEgaPPpbT4y82Lblk3Jce1uQ4ciEPBrFbqGtyFQP\n
                  EY5a0tv4Z4qEdsirVDJoZ5NS4eNIZLsaeGEpBjOESjuPDjSuV/0lUETM6twCcXlV\n
                  pV306H1euXVZddI/LfD6N8/SesMd3V2oJF9/bA8SCW55FConXsbLj+q1rYdzus2T\n
                  PGAs8+8MSDfYuzHnXIV7BuVchdqHvy9L3PypcfiIUP6ppMCKJ3NlXGNW/i6kZVRT\n
                  52PEeE+a9Y1dve56L/KpGdnnUEXNp9IQtvHHygNhmpJgl6zjqiWAKUty5Y1N98xK\n
                  N1T7vdwbcnEMnYwXBVJvhrJgTNlm+NGtRoOUYGILaT7R9HcQ1LO9cuEpcSeRhrxE\n
                  YV62SSBTjVFKjJSCbQFmJOLsjdKx0V+wnESSbboNUwxWEzmfNeU9XkH1VumWz8aN\n
                  0ZIpO+YrJ8nV/iItGxX7rz1rRgX+xbnsEFEJkVQfJ22mMX1F5z7WcCcAiRWxj4RU\n
                  9szm8zVbS4etjJl3rtanfGb+vLJneO1hFNJiX5SRnQcWR81Hpsxnh8wNUZjCkQFW\n
                  h2WEad/IZ+QZ/yeFn0cN8k8CASM=\n
                  -----END PUBLIC KEY-----",
            message: {
              code: "message code",
              contents: "message contents"
            }
          }

    CheckClusterInfo:
      description: 클러스터의 서비스 상태를 출력한다.
      content:
        application/json:
          schema:
            type: object
            properties:
              cluster_info:
                $ref: 'schema.yaml#/CheckCluster'
              message:
                $ref: 'schema.yaml#/Message'
          example: {
            cluster_info: {
              computes: [
                { binary: "nova-compute", host: "qa-cloud-2-pack-compute-1.datacommand.kr", zone: "nova", status: "unavailable", last_updated: "1시간 4분" },
              ],
              storages: [
                { binary: "cinder-volume", backend_name: "ceph", host: "qa-cloud-2-pack-control-1.datacommand.kr", zone: "nova", status: "available", last_updated: "0분" },
              ],
              networks: [
                { type: "OVN Controller agent", binary: "ovn-controller", host: "qa-cloud-2-pack-compute-1.datacommand.kr", status: "available", last_updated: "0분" },
              ],
              status: "cluster.state.warning",
              updated_at: "2분"
            },
            message: {
              code: "message code",
              contents: "message contents"
            }
          }

    ConfigInfo:
      description: 클러스터의 Config
      content:
        application/json:
          schema:
            type: object
            properties:
              cluster_config:
                $ref: 'schema.yaml#/ClusterConfig'
              message:
                $ref: 'schema.yaml#/Message'
          example: {
            cluster_config: {
              timestamp_interval: 5,
              reserved_sync_interval: 1,
            },
            message: {
              code: "message code",
              contents: "message contents"
            }
          }

    SyncClusterStatus:
      description: 클러스터 동기화 상태 정보
      content:
        application/json:
          schema:
            type: object
            properties:
              cluster_status:
                $ref: 'schema.yaml#/SyncClusterStatus'
              message:
                $ref: 'schema.yaml#/Message'
          example: {
            cluster_status: {
              id: 1,
              status: "cluster.sync.state.running",
              progress: 20,
              completion: [
                { resource: "ResourceTenantList", progress_status: "running" },
                { resource: "ResourceAvailabilityZoneList", progress_status: "waiting" },
                { resource: "ResourceHypervisorList", progress_status: "waiting" },
                { resource: "ResourceSecurityGroupList", progress_status: "waiting" },
                { resource: "ResourceNetworkList", progress_status: "completed" },
                { resource: "ResourceRouterList", progress_status: "waiting" },
                { resource: "ResourceStorageList", progress_status: "waiting" },
                { resource: "ResourceVolumeList", progress_status: "completed" },
                { resource: "ResourceVolumeSnapshotList", progress_status: "waiting" },
                { resource: "ResourceKeypairList", progress_status: "waiting" },
                { resource: "ResourceInstanceList", progress_status: "waiting" },
              ]
            },
            message: {
              code: "message code",
              contents: "message contents"
            }
          }

    Clusters:
      description: 클러스터 목록을 반환한다.
      content:
        application/json:
          schema:
            type: object
            properties:
              clusters:
                type: array
                items:
                  $ref: 'schema.yaml#/Cluster'
              pagination:
                $ref: 'schema.yaml#/Pagination'
              message:
                $ref: 'schema.yaml#/Message'
          example: {
            clusters: [
              {
                id: 1, owner_group: {id: 1, name: "개발팀1", remarks: "개발하는 팀이다", deleted_flag: true},
                name: "대전센터 OpenStack #001",
                state_code: "cluster.state.active",
                type_code: "cluster.type.openstack",
                created_at: 1588899147, updated_at: 1588899147, synchronized_at: 1588899147
              },
              {
                id: 2, owner_group: {id: 3, name: "개발팀3", remarks: "개발하는 팀이다", deleted_flag: true},
                name: "광주센터 OpenStack #001",
                state_code: "cluster.state.active",
                type_code: "cluster.type.openstack",
                remarks: "광주센터 OpenStack #001",
                created_at: 1588899147, updated_at: 1588899147, synchronized_at: 1588899147
              }
            ],
            pagination: {
              page: 1,
              total_page: 10,
              total_items: 100
            },
            message: {
              code: "message code",
              contents: "message contents"
            }
          }

    Cluster:
      description: 클러스터 상세정보를 반환한다.
      content:
        application/json:
          schema:
            type: object
            properties:
              cluster:
                $ref: 'schema.yaml#/Cluster'
              message:
                $ref: 'schema.yaml#/Message'
          example: {
            cluster: {
                id: 1, owner_group: {id: 1, name: "개발팀1", remarks: "개발하는 팀이다", deleted_flag: true},
                permissions: [
                  {group: {id: 2, name: "개발팀2", remarks: "개발하는 팀이다", deleted_flag: true}, mode_code: "cluster.permission.mode.readonly"},
                  {group: {id: 3, name: "개발팀3", remarks: "개발하는 팀이다", deleted_flag: true}, mode_code: "cluster.permission.mode.readwrite"},
                ],
                name: "대전센터 OpenStack #001",
                state_code: "cluster.state.active",
                type_code: "cluster.type.openstack",
                api_server_url: "https://192.168.1.64:8080",
                credential: "",
                remarks: "대전센터 OpenStack #001",
                created_at: 1588899147, updated_at: 1588899147, synchronized_at: 1588899147
            },
            message: {
              code: "message code",
              contents: "message contents"
            }
          }

    Message:
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                $ref: 'schema.yaml#/Message'
          example: {
            message: {
              code: "message code",
              contents: "message contents"
            }
          }
